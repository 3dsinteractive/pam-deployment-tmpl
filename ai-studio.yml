apiVersion: apps/v1
kind: Deployment
metadata:
  name: <name>
  namespace: <namespace>
  labels:
    name: <name>
spec:
  replicas: <replicas>
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  selector:
    matchLabels:
      name: <name>
  template:
    metadata:
      labels:
        name: <name>
    spec:
      imagePullSecrets:
      - name: dockerlogin
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: env
                  operator: In
                  values:
                  - c1
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        env: c1
        role: worker
      priorityClassName: class-static
      containers:
      - name: <name>
        image: <image>
        imagePullPolicy: IfNotPresent
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 10
        ports:
        - name: aistudio3000
          containerPort: 3000
        resources:
          requests:
            memory: <minMem>
            cpu: <minCpu>
          limits:
            memory: <maxMem>
            cpu: <maxCpu>
        volumeMounts:
        - name: pvc-aistudio
          mountPath: /app/public/uploads
      - name: pvc-aistudio
        persistentVolumeClaim:
          claimName: pvc-aistudio
---
apiVersion: v1
kind: Service
metadata:
  name: <name>
  namespace: <namespace>
  labels:
    name: <name>
spec:
  ports:
  - port: 80
    name: aistudio3000
    targetPort: 3000
    protocol: TCP
  selector:
    name: <name>