apiVersion: apps/v1
kind: Deployment
metadata:
  name: <name>
  namespace: <namespace>
  labels:
    name: <name>
spec:
  replicas: <replicas>
  selector:
    matchLabels:
      name: <name>
  template:
    metadata:
      labels:
        name: <name>
    spec:
      terminationGracePeriodSeconds: 60
      imagePullSecrets:
      - name: dockerlogin
      nodeSelector:
        env: c1
        role: worker
      priorityClassName: class-static
      containers:
      - name: <name>
        image: <image>
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /readinez
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 10
        env: [ {name: PAM4_ENV, value: <env>}, {name: DEBUG, value: "true"}, {name: PAM4_PROFILER_NAME, value: pam-<name>} <envs>]
        resources:
        volumeMounts:
        - name: vol-profiler
          mountPath: /profiler
      volumes:
      - name: vol-profiler
        configMap:
          name: profiler
          items:
          - key: profiler
            path: profiler.json
---
apiVersion: v1
kind: Service
metadata:
  name: <name>
  namespace: <namespace>
  labels:
    name: <name>
spec:
  ports:
  - port: 8080
    name: msgssc8080
    targetPort: 8080
    protocol: TCP
  selector:
    name: <name>